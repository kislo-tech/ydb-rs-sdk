name: YDB tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '18 4 * * *'

env:
  CARGO_TERM_COLOR: always
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse
  RUST_VERSION_OLD: "1.68.0"
  RUST_VERSION_NEW: "1.90.0"

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        rust_version: [ "RUST_VERSION_OLD", "RUST_VERSION_NEW" ]

    services:
      ydb:
        image: ydbplatform/local-ydb:nightly
        ports:
          - 2135:2135
          - 2136:2136
          - 8765:8765
        volumes:
          - /tmp/ydb_certs:/ydb_certs
        env:
          YDB_USE_IN_MEMORY_PDISKS: true
        options: '-h localhost --name ydb'

    runs-on: ubuntu-24.04

    steps:
    - name: Show YDB server version
      run: docker ps; docker exec ydb /ydbd -V

    - name: Install rust
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: ${{ env[matrix.rust_version] }}

    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Rust version
      id: rust_version_step
      run: |
        rustc --version
        cargo --version
        echo "CARGO_INCREMENTAL=$CARGO_INCREMENTAL"
        echo "::set-output name=version::$(rustc --version | cut -d ' ' -f 2)"

    - name: Rust cache
      uses: Swatinem/rust-cache@v2

    - name: Run tests
      env:
        YDB_CONNECTION_STRING: grpc://localhost:2136?database=/local
      run: cargo test --verbose --workspace -- --include-ignored
